{"version":3,"sources":["webpack:///./src/pages/portfolio.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["displayItems","portfolioItems","PortfolioPage","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","title","_components_seo__WEBPACK_IMPORTED_MODULE_5__","map","item","index","className","portfolioStyles","tile","key","tileImage","_components_PortfolioScreenshot__WEBPACK_IMPORTED_MODULE_6__","queryKey","tileText","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","year","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired","__webpack_require__","createHTML","url","this"],"mappings":"iMAUMA,EAAe,CACnBC,IAAc,YACdA,IAAc,sBACdA,IAAc,uBACdA,IAAc,aAuBDC,UApBO,kBACpBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAM,6BACZJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKD,MAAM,8BACVP,EAAaS,IAAI,SAACC,EAAMC,GAAP,OAChBR,EAAAC,EAAAC,cAAA,OAAKO,UAAWC,IAAgBC,KAAMC,IAAKL,EAAI,MAC7CP,EAAAC,EAAAC,cAAA,OAAKO,UAAWC,IAAgBG,WAC9Bb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAqBC,SAAUR,EAAI,KAAS,GAAb,YAGjCP,EAAAC,EAAAC,cAAA,OAAKO,UAAWC,IAAgBM,UAC9BhB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAIX,EAAI,MAAWA,EAAI,OAE/BP,EAAAC,EAAAC,cAAA,OAAKO,UAAWC,IAAgBS,MAAOZ,EAAI,8GClBrD,SAASa,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMpB,EAASiB,EAATjB,MAC9BqB,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAA7B,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,eAAgB,CACdT,QAEFnB,MAAOA,EACP6B,cAAa,QAAUR,EAAKI,aAAazB,MACzCoB,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS/B,GAEX,CACEgC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS/B,GAEX,CACE8B,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAGbF,EAAIoB,UAAY,CACdlB,YAAamB,IAAUC,OACvBnB,KAAMkB,IAAUC,OAChBlB,KAAMiB,IAAUE,QAAQF,IAAUG,QAClCxC,MAAOqC,IAAUC,OAAOG,YAGXzB,kLCrFf0B,EAAQ,IAARA,CAAwB,gBAAAC,GACxB,gBAAAC,GACA,OAAAD,EAAAE,KAAA,WAAAD","file":"component---src-pages-portfolio-js-43de7965d11fa17469a8.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport PortfolioScreenshot from \"./../components/PortfolioScreenshot\";\nimport portfolioStyles from \"./portfolioStyles.module.css\";\n\nimport portfolioItems from \"../portfolioItems.js\";\n\nconst displayItems = [\n  portfolioItems[\"quoraDesign\"],\n  portfolioItems[\"quoraDesignManagement\"],\n  portfolioItems[\"hustleDesignManagement\"],\n  portfolioItems[\"retargeting\"]\n];\n\nconst PortfolioPage = () => (\n  <Layout title=\"Joel Lewenstein Portfolio\">\n    <SEO title=\"Joel Lewenstein Portfolio\" />\n    {displayItems.map((item, index) => (\n      <div className={portfolioStyles.tile} key={item[\"name\"]}>\n        <div className={portfolioStyles.tileImage}>\n          <PortfolioScreenshot queryKey={item[\"work\"][0][\"queryKey\"]} />\n        </div>\n\n        <div className={portfolioStyles.tileText}>\n          <div>\n            <Link to={item[\"link\"]}>{item[\"name\"]}</Link>\n          </div>\n          <div className={portfolioStyles.year}>{item[\"year\"]}</div>\n        </div>\n      </div>\n    ))}\n  </Layout>\n);\n\nexport default PortfolioPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}