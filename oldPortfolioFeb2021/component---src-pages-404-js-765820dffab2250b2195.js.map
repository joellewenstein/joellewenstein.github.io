{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","subtitle","react_default","className","headerStyles","header","titles","Layout","_ref$title","_ref$subtitle","children","Fragment"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,uJCGJ,SAASE,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAb,EAAAC,cAACa,EAAAd,EAAD,CACEe,eAAgB,CACdT,QAEFJ,MAAOA,EACPc,cAAa,QAAUR,EAAKI,aAAaV,MACzCK,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAShB,GAEX,CACEe,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEF,8ECnFToB,EAAS,SAAAnB,GAAA,IAAGF,EAAHE,EAAGF,MAAOsB,EAAVpB,EAAUoB,SAAV,OACbC,EAAAzB,EAAAC,cAAA,UAAQyB,UAAWC,IAAaC,QAC9BH,EAAAzB,EAAAC,cAAA,OAAKyB,UAAU,WACbD,EAAAzB,EAAAC,cAAA,OAAKyB,UAAWC,IAAaE,QAC3BJ,EAAAzB,EAAAC,cAAA,UAAKC,GACJsB,GAAYC,EAAAzB,EAAAC,cAAA,UAAKuB,OAW1BD,EAAOD,aAAe,CACpBpB,MAAK,GACLsB,SAAQ,IAGKD,eCGAO,IAfA,SAAA1B,GAA6C,IAAA2B,EAAA3B,EAA1CF,aAA0C,IAAA6B,EAAlC,GAAkCA,EAAAC,EAAA5B,EAA9BoB,gBAA8B,IAAAQ,EAAnB,GAAmBA,EAAfC,EAAe7B,EAAf6B,SAC3C,OACER,EAAAzB,EAAAC,cAAAwB,EAAAzB,EAAAkC,SAAA,KACET,EAAAzB,EAAAC,cAAC2B,EAAD,CAAQ1B,MAAOA,EAAOsB,SAAUA,IAChCC,EAAAzB,EAAAC,cAAA,OAAKyB,UAAU,WACbD,EAAAzB,EAAAC,cAAA,YAAOgC","file":"component---src-pages-404-js-765820dffab2250b2195.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport headerStyles from \"./header.module.css\";\n\nconst Header = ({ title, subtitle }) => (\n  <header className={headerStyles.header}>\n    <div className=\"content\">\n      <div className={headerStyles.titles}>\n        <h1>{title}</h1>\n        {subtitle && <h2>{subtitle}</h2>}\n      </div>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string\n};\n\nHeader.defaultProps = {\n  title: ``,\n  subtitle: ``\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ title = \"\", subtitle = \"\", children }) => {\n  return (\n    <>\n      <Header title={title} subtitle={subtitle} />\n      <div className=\"content\">\n        <main>{children}</main>\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n"],"sourceRoot":""}